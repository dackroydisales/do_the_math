{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Medium;\f1\fnil\fcharset0 HelveticaNeue;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 HelveticaNeue-Bold;\f4\fnil\fcharset0 HelveticaNeue-Italic;\f5\fnil\fcharset0 Menlo-Bold;
\f6\fnil\fcharset0 Menlo-Regular;\f7\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;\red255\green255\blue255;\red55\green146\blue55;
\red67\green91\blue103;\red29\green38\blue42;\red245\green247\blue249;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;\cssrgb\c100000\c100000\c100000;\cssrgb\c26275\c62745\c27843;
\cssrgb\c32941\c43137\c47843;\cssrgb\c14902\c19608\c21961;\cssrgb\c96863\c97647\c98039;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 1370.\'a0Increasing Decreasing String\cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\b0\fs26 \cf4 \cb3 \strokec4 Easy\cb1 \
\pard\pardeftab720\sl340\qc\partightenfactor0

\f1\fs24 \cf5 \strokec5 \
\cb3 297\cb1 \
\
\cb3 305\cb1 \
\
\cb3 Add to List\cb1 \
\
\cb3 Share\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf6 \cb3 \strokec6 Given a string\'a0
\f2\fs26 \cf5 \cb7 \strokec5 s
\f1\fs28 \cf6 \cb3 \strokec6 . You should re-order the string using the following algorithm:\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Pick the\'a0
\f3\b smallest
\f1\b0 \'a0character from\'a0
\f2\fs26 \cf5 \cb7 \strokec5 s
\f1\fs28 \cf6 \cb3 \strokec6 \'a0and\'a0
\f3\b append
\f1\b0 \'a0it to the result.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Pick the\'a0
\f3\b smallest
\f1\b0 \'a0character from\'a0
\f2\fs26 \cf5 \cb7 \strokec5 s
\f1\fs28 \cf6 \cb3 \strokec6 \'a0which is greater than the last appended character to the result and\'a0
\f3\b append
\f1\b0 \'a0it.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Repeat step 2 until you cannot pick more characters.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Pick the\'a0
\f3\b largest
\f1\b0 \'a0character from\'a0
\f2\fs26 \cf5 \cb7 \strokec5 s
\f1\fs28 \cf6 \cb3 \strokec6 \'a0and\'a0
\f3\b append
\f1\b0 \'a0it to the result.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Pick the\'a0
\f3\b largest
\f1\b0 \'a0character from\'a0
\f2\fs26 \cf5 \cb7 \strokec5 s
\f1\fs28 \cf6 \cb3 \strokec6 \'a0which is smaller than the last appended character to the result and\'a0
\f3\b append
\f1\b0 \'a0it.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Repeat step 5 until you cannot pick more characters.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Repeat the steps from 1 to 6 until you pick all characters from\'a0
\f2\fs26 \cf5 \cb7 \strokec5 s
\f1\fs28 \cf6 \cb3 \strokec6 .\cb1 \
\pard\pardeftab720\sa280\partightenfactor0
\cf6 \cb3 In each step, If the smallest or the largest character appears more than once you can choose any occurrence and append it to the result.\cb1 \
\cb3 Return\'a0
\f4\i the result string
\f1\i0 \'a0after sorting\'a0
\f2\fs26 \cf5 \cb7 \strokec5 s
\f1\fs28 \cf6 \cb3 \strokec6 \'a0with this algorithm.\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\b \cf6 \cb3 Example 1:
\f1\b0 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f5\b\fs26 \cf6 \cb7 Input:
\f6\b0  s = "aaaabbbbcccc"\

\f5\b Output:
\f6\b0  "abccbaabccba"\

\f5\b Explanation:
\f6\b0  After steps 1, 2 and 3 of the first iteration, result = "abc"\
After steps 4, 5 and 6 of the first iteration, result = "abccba"\
First iteration is done. Now s = "aabbcc" and we go back to step 1\
After steps 1, 2 and 3 of the second iteration, result = "abccbaabc"\
After steps 4, 5 and 6 of the second iteration, result = "abccbaabccba"\
\pard\pardeftab720\sa280\partightenfactor0

\f3\b\fs28 \cf6 \cb3 Example 2:
\f1\b0 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f5\b\fs26 \cf6 \cb7 Input:
\f6\b0  s = "rat"\

\f5\b Output:
\f6\b0  "art"\

\f5\b Explanation:
\f6\b0  The word "rat" becomes "art" after re-ordering it with the mentioned algorithm.\
\pard\pardeftab720\sa280\partightenfactor0

\f3\b\fs28 \cf6 \cb3 Example 3:
\f1\b0 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f5\b\fs26 \cf6 \cb7 Input:
\f6\b0  s = "leetcode"\

\f5\b Output:
\f6\b0  "cdelotee"\
\pard\pardeftab720\sa280\partightenfactor0

\f3\b\fs28 \cf6 \cb3 Example 4:
\f1\b0 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f5\b\fs26 \cf6 \cb7 Input:
\f6\b0  s = "ggggggg"\

\f5\b Output:
\f6\b0  "ggggggg"\
\pard\pardeftab720\sa280\partightenfactor0

\f3\b\fs28 \cf6 \cb3 Example 5:
\f1\b0 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f5\b\fs26 \cf6 \cb7 Input:
\f6\b0  s = "spo"\

\f5\b Output:
\f6\b0  "ops"\
\pard\pardeftab720\sa280\partightenfactor0

\f1\fs28 \cf6 \cb3 \'a0\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\b \cf6 \cb3 Constraints:
\f1\b0 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f2\fs26 \cf5 \cb7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 1 <= s.length <= 500
\f1\fs28 \cf6 \cb1 \strokec6 \
\ls2\ilvl0
\f2\fs26 \cf5 \cb7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 s
\f1\fs28 \cf6 \cb3 \strokec6 \'a0contains only lower-case English letters.\cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f7\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
/**\
 * @param \{string\} s\
 * @return \{string\}\
 */\
//DOES ORDER MATTER?\
//NO\
//DATA STRUCTURE USED: DICT\
\
var sortString = function(s)\
\{\
    let dict = \{\}\
    for(const char of s)\
    \{\
        if(dict[char])\
        \{\
            dict[char] = dict[char] + 1;\
        \} else \{\
            dict[char] = 1;\
        \}\
    \}\
    \
    let alphabet = "abcdefghijklmnopqrstuvwxyz";\
    \
    let return_string = "";\
    while(return_string.length < s.length)\
    \{\
        for(let i = 0; i < alphabet.length; i++)\
        \{\
             if(dict[alphabet[i]] > 0)   \
             \{\
                 dict[alphabet[i]] = dict[alphabet[i]] - 1;\
                 return_string = return_string.concat(alphabet[i]);\
             \}\
        \}\
        for(let i = 25; i >= 0; i--)\
        \{\
             if(dict[alphabet[i]] > 0)   \
             \{\
                 dict[alphabet[i]] = dict[alphabet[i]] - 1;\
                 return_string = return_string.concat(alphabet[i]);\
             \}\
        \}\
    \}\
    return return_string;\
\}}