{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Medium;\f1\fnil\fcharset0 HelveticaNeue;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 HelveticaNeue-Bold;\f4\fnil\fcharset0 Menlo-Bold;\f5\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;\red255\green255\blue255;\red55\green146\blue55;
\red67\green91\blue103;\red29\green38\blue42;\red245\green247\blue249;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;\cssrgb\c100000\c100000\c100000;\cssrgb\c26275\c62745\c27843;
\cssrgb\c32941\c43137\c47843;\cssrgb\c14902\c19608\c21961;\cssrgb\c96863\c97647\c98039;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 9.\'a0Palindrome Number\cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\b0\fs26 \cf4 \cb3 \strokec4 Easy\cb1 \
\pard\pardeftab720\sl340\qc\partightenfactor0

\f1\fs24 \cf5 \strokec5 \
\pard\pardeftab720\sl340\qc\partightenfactor0
\cf5 \cb3 2968\cb1 \
\
\cb3 1687\cb1 \
\
\cb3 Add to List\cb1 \
\
\cb3 Share\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf6 \cb3 \strokec6 Given an integer\'a0
\f2\fs26 \cf5 \cb7 \strokec5 x
\f1\fs28 \cf6 \cb3 \strokec6 , return\'a0
\f2\fs26 \cf5 \cb7 \strokec5 true
\f1\fs28 \cf6 \cb3 \strokec6 \'a0if\'a0
\f2\fs26 \cf5 \cb7 \strokec5 x
\f1\fs28 \cf6 \cb3 \strokec6 \'a0is palindrome integer.\cb1 \
\cb3 An integer is a\'a0
\f3\b palindrome
\f1\b0 \'a0when it reads the same backward as forward. For example,\'a0
\f2\fs26 \cf5 \cb7 \strokec5 121
\f1\fs28 \cf6 \cb3 \strokec6 \'a0is palindrome while\'a0
\f2\fs26 \cf5 \cb7 \strokec5 123
\f1\fs28 \cf6 \cb3 \strokec6 \'a0is not.\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\b \cf6 \cb3 Example 1:
\f1\b0 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f4\b\fs26 \cf6 \cb7 Input:
\f5\b0  x = 121\

\f4\b Output:
\f5\b0  true\
\pard\pardeftab720\sa280\partightenfactor0

\f3\b\fs28 \cf6 \cb3 Example 2:
\f1\b0 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f4\b\fs26 \cf6 \cb7 Input:
\f5\b0  x = -121\

\f4\b Output:
\f5\b0  false\

\f4\b Explanation:
\f5\b0  From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\
\pard\pardeftab720\sa280\partightenfactor0

\f3\b\fs28 \cf6 \cb3 Example 3:
\f1\b0 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f4\b\fs26 \cf6 \cb7 Input:
\f5\b0  x = 10\

\f4\b Output:
\f5\b0  false\

\f4\b Explanation:
\f5\b0  Reads 01 from right to left. Therefore it is not a palindrome.\
\pard\pardeftab720\sa280\partightenfactor0

\f3\b\fs28 \cf6 \cb3 Example 4:
\f1\b0 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f4\b\fs26 \cf6 \cb7 Input:
\f5\b0  x = -101\

\f4\b Output:
\f5\b0  false\
\pard\pardeftab720\sa280\partightenfactor0

\f1\fs28 \cf6 \cb3 \'a0\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\f3\b \cf6 \cb3 Constraints:
\f1\b0 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f2\fs26 \cf5 \cb7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 -2
\fs19\fsmilli9750 31
\fs26 \'a0<= x <= 2
\fs19\fsmilli9750 31
\fs26 \'a0- 1
\f1\fs28 \cf6 \cb1 \strokec6 \
\pard\pardeftab720\sa280\partightenfactor0
\cf6 \cb3 \'a0\cb1 \
\pard\pardeftab720\partightenfactor0

\f3\b \cf6 \cb3 Follow up:
\f1\b0 \'a0Could you solve it without converting the integer to a string?\cb1 \
\
\
/**\
 * @param \{number\} x\
 * @return \{boolean\}\
 */\
\
var isPalindrome = function(x) \
\{\
  string = x.toString();\
  for(let i = 0; i < string.length; i++)\
  \{\
      if(string.charAt(i) !== string.charAt(string.length - 1 - i))\
      \{\
          return false;\
       \}\
  \}\
    return true;\
\};\
\
\'97\'97\'97\'97\'97\'97\
\
Difficult to solve as int due to leading 0s, most simply done with halfway	math (generating two smaller numbers out of front half and back half)}