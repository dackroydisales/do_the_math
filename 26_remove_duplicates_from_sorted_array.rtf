{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Medium;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 HelveticaNeue-Italic;
\f3\fnil\fcharset0 HelveticaNeue-Bold;\f4\fnil\fcharset0 Menlo-Regular;\f5\fnil\fcharset0 Menlo-Bold;
\f6\fnil\fcharset0 Menlo-Italic;\f7\fmodern\fcharset0 Courier;\f8\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;\red255\green255\blue255;\red55\green146\blue55;
\red67\green91\blue103;\red29\green38\blue42;\red78\green106\blue120;\red245\green247\blue249;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;\cssrgb\c100000\c100000\c100000;\cssrgb\c26275\c62745\c27843;
\cssrgb\c32941\c43137\c47843;\cssrgb\c14902\c19608\c21961;\cssrgb\c37647\c49020\c54510;\cssrgb\c96863\c97647\c98039;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 26.\'a0Remove Duplicates from Sorted Array\cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\b0\fs26 \cf4 \cb3 \strokec4 Easy\cb1 \
\pard\pardeftab720\sl340\qc\partightenfactor0

\f1\fs24 \cf5 \strokec5 \
\cb3 3425\cb1 \
\
\cb3 6322\cb1 \
\
\cb3 Add to List\cb1 \
\
\cb3 Share\cb1 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf6 \cb3 \strokec6 Given a sorted array\'a0
\f2\i nums
\f1\i0 , remove the duplicates\'a0{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/In-place_algorithm"}}{\fldrslt 
\f3\b \cf7 \strokec7 in-place}}\'a0such that each element appears only\'a0
\f2\i once
\f1\i0 \'a0and returns the new length.\cb1 \
\cb3 Do not allocate extra space for another array, you must do this by\'a0
\f3\b modifying the input array\'a0{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/In-place_algorithm"}}{\fldrslt \cf7 \strokec7 in-place}}
\f1\b0 \'a0with O(1) extra memory.\cb1 \

\f3\b \cb3 Clarification:
\f1\b0 \cb1 \
\cb3 Confused why the returned value is an integer but your answer is an array?\cb1 \
\cb3 Note that the input array is passed in by\'a0
\f3\b reference
\f1\b0 , which means a modification to the input array will be known to the caller as well.\cb1 \
\cb3 Internally you can think of this:\cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f4\fs26 \cf6 \cb8 // 
\f5\b nums
\f4\b0  is passed in by reference. (i.e., without making a copy)\
int len = removeDuplicates(nums);\
\
// any modification to 
\f5\b nums
\f4\b0  in your function would be known by the caller.\
// using the length returned by your function, it prints the first 
\f5\b len
\f4\b0  elements.\
for (int i = 0; i < len; i++) \{\
\'a0 \'a0 print(nums[i]);\
\}\
\pard\pardeftab720\sa280\partightenfactor0

\f1\fs28 \cf6 \cb3 \'a0\cb1 \

\f3\b \cb3 Example 1:
\f1\b0 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f5\b\fs26 \cf6 \cb8 Input:
\f4\b0  nums = [1,1,2]\

\f5\b Output:
\f4\b0  2, nums = [1,2]\

\f5\b Explanation:
\f4\b0 \'a0Your function should return length = 
\f5\b 2
\f4\b0 , with the first two elements of 
\f6\i nums
\f4\i0  being 
\f5\b 1
\f4\b0  and 
\f5\b 2
\f4\b0  respectively. It doesn't matter what you leave beyond the returned length.\
\pard\pardeftab720\sa280\partightenfactor0

\f3\b\fs28 \cf6 \cb3 Example 2:
\f1\b0 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f5\b\fs26 \cf6 \cb8 Input:
\f4\b0  nums = [0,0,1,1,1,2,2,3,3,4]\

\f5\b Output:
\f4\b0  5, nums = [0,1,2,3,4]\

\f5\b Explanation:
\f4\b0 \'a0Your function should return length = 
\f5\b 5
\f4\b0 , with the first five elements of 
\f6\i nums
\f4\i0  being modified to\'a0
\f5\b 0
\f4\b0 , 
\f5\b 1
\f4\b0 , 
\f5\b 2
\f4\b0 , 
\f5\b 3
\f4\b0 , and\'a0
\f5\b 4
\f4\b0  respectively. It doesn't matter what values are set beyond\'a0the returned length.\
\pard\pardeftab720\sa280\partightenfactor0

\f1\fs28 \cf6 \cb3 \'a0\cb1 \

\f3\b \cb3 Constraints:
\f1\b0 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f7\fs26 \cf5 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 0 <= nums.length <= 3 * 10
\fs19\fsmilli9750 4
\f1\fs28 \cf6 \cb1 \strokec6 \
\ls1\ilvl0
\f7\fs26 \cf5 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 -10
\fs19\fsmilli9750 4
\fs26 \'a0<= nums[i] <= 10
\fs19\fsmilli9750 4
\f1\fs28 \cf6 \cb1 \strokec6 \
\ls1\ilvl0
\f7\fs26 \cf5 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 nums
\f1\fs28 \cf6 \cb3 \strokec6 \'a0is sorted in ascending order.\cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f8\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
\'97\'97\
\
/**\
 * @param \{number[]\} nums\
 * @return \{number\}\
 */\
var removeDuplicates = function(nums) \{\
  let length_counter = nums.length;\
  for(let i = 0; i < length_counter; i++)\
  \{\
      if((nums[i+1] || nums[i+1] === 0) && nums[i] === nums[i + 1])\
      \{\
          for(let j = i; j < length_counter; j++)\
          \{\
              nums[j]=nums[j+1];              \
          \}\
          length_counter--;\
          i--;\
      \}\
  \}\
  return length_counter;\
\};\
\
\
\
\'85better way\
\
\
/**\
 * @param \{number[]\} nums\
 * @return \{number\}\
 */\
var removeDuplicates = function(nums) \{\
  if(nums.length === 0)\{return 0;\}\
  let i = 0;\
  for(let j = i; j < nums.length; j++)\
  \{\
    if(nums[j] !== nums[i])\
    \{\
        i++;\
        nums[i] = nums[j];\
    \}\
  \}\
  return i+1;\
\};}